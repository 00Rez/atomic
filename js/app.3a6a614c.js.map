{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/CardTypeComponent.tsx","webpack:///./src/components/TileComponent.tsx","webpack:///./src/components/GridComponent.tsx","webpack:///./src/App.tsx","webpack:///./src/registerServiceWorker.ts","webpack:///./src/main.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","CardTypeComponent","this","isVisited","$emit","type","dangerNearby","mdiDiamondStone","mdiSkull","onClick","mdiPackageVariant","mdiPackageVariantClosed","Vue","__decorate","Prop","required","Component","TileComponent","isRevealed","onTypeClick","mdiCardsDiamondOutline","components","GridComponent","tile","row","x","y","map","id","onTileClick","card","ItemType","TileType","App","gameState","tiles","score","grids","isPopulated","path","hasDecayDown","hasDetect","hasShield","blockInput","Entropy","gotoGrid","checkTile","Decay","revealAll","setTimeout","gotoPreviousGrid","item","Shield","Detect","revealedCount","getGridTileCountByQuery","currentGrid","a","grid","find","currentGridId","$nextTick","reset","pop","decayTiles","getGridTilesByQuery","index","Math","floor","random","decayTile","existingGrid","resetGrid","createDeck","shuffleDeck","populateGrid","query","items","flat","byType","filter","$set","energyTiles","Energy","blueEnergyTiles","energyTile","chance","previousTile","unshift","nextId","mdiStarShooting","mdiLayers","mdiShield","mdiShieldSearch","register","process","ready","console","log","registered","cached","updatefound","updated","offline","error","config","productionTip","render","h","$mount"],"mappings":"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","file":"js/app.3a6a614c.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/atomic/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import { Tile } from \"@/App\";\r\nimport { Component, Prop, Vue } from \"vue-property-decorator\";\r\nimport { mdiSkull, mdiApps, mdiCardsDiamond, mdiPackageVariantClosed, mdiDiamondStone, mdiPackageVariant } from \"@mdi/js\";\r\n\r\n@Component({\r\n  name: \"tile\",\r\n})\r\nexport default class CardTypeComponent extends Vue {\r\n  @Prop({ required: true })\r\n  data!: Tile;\r\n\r\n  onClick() {\r\n    if (!this.data.isVisited) {\r\n      this.$emit(\"typeClick\", this.data);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    switch (this.data?.type) {\r\n      case \"energy\":\r\n        return (\r\n          <div\r\n            staticClass=\"w-20 h-20 rounded-xl cursor-pointer\"\r\n            class={{\r\n              \"bg-red-300 text-red-500\": this.data.dangerNearby,\r\n              \"bg-blue-300 text-blue-500\": !this.data.dangerNearby,\r\n            }}\r\n            style=\"display: flex; justify-content: center; align-items: center;\"\r\n          >\r\n            <svg style=\"width:48px;height:48px\" viewBox=\"0 0 24 24\">\r\n              <path fill=\"currentColor\" d={mdiDiamondStone} />\r\n            </svg>\r\n          </div>\r\n        );\r\n      case \"decay\":\r\n        return (\r\n          <div\r\n            class=\"w-20 h-20 bg-gray-600 text-white rounded-xl cursor-pointer\"\r\n            style=\"display: flex; justify-content: center; align-items: center;\"\r\n          >\r\n            <svg style=\"width:48px;height:48px;\" viewBox=\"0 0 24 24\">\r\n              <path fill=\"currentColor\" d={mdiSkull} />\r\n            </svg>\r\n          </div>\r\n        );\r\n      case \"entropy\":\r\n        return (\r\n          <div onClick={this.onClick}\r\n            class={{\r\n              \"bg-purple-300 text-purple-500\": !this.data.isVisited,\r\n              \"bg-warm-gray-600 text-warm-gray-400\": this.data.isVisited,\r\n            }}\r\n            staticClass=\"w-20 h-20 rounded-xl cursor-pointer\"\r\n            style=\"display: flex; justify-content: center; align-items: center;\"\r\n          >\r\n            {this.data.isVisited ? (\r\n              <svg style=\"width:48px;height:48px;\" viewBox=\"0 0 24 24\">\r\n                <path fill=\"currentColor\" d={mdiPackageVariant} />\r\n              </svg>\r\n            ) : (\r\n              <svg style=\"width:48px;height:48px;\" viewBox=\"0 0 24 24\">\r\n                <path fill=\"currentColor\" d={mdiPackageVariantClosed} />\r\n              </svg>\r\n            )}\r\n          </div>\r\n        );\r\n    }\r\n  }\r\n}\r\n","import { Tile } from \"@/App\";\nimport { mdiCardsDiamondOutline } from \"@mdi/js\";\nimport { Component, Prop, Vue } from \"vue-property-decorator\";\nimport CardTypeComponent from \"./CardTypeComponent\";\n\n@Component({\n  name: \"tile\",\n  components: {\n    \"card-type\": CardTypeComponent,\n  },\n})\nexport default class TileComponent extends Vue {\n  @Prop({ required: true })\n  data!: Tile;\n\n  onClick() {\n    this.$emit(\"tileClick\");\n  }\n\n  onTypeClick() {\n    this.$emit(\"typeClick\", this.data);\n  }\n\n  render() {\n    return (\n      <div class=\"w-20 h-20 bg-blue-gray-300 m-2 rounded-xl shadow\">\n        {this.data?.isRevealed ? (\n          <card-type onTypeClick={this.onTypeClick} data={this.data} />\n        ) : (\n          <div\n            onClick={this.onClick}\n            class=\"w-20 h-20 bg-blue-gray-400 rounded-xl cursor-pointer\"\n            style=\"display: flex; justify-content: center; align-items: center;\"\n          >\n            <svg\n              class=\"text-cool-gray-300 opacity-20\"\n              style=\"width:48px;height:48px;\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path fill=\"currentColor\" d={mdiCardsDiamondOutline} />\n            </svg>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import { Tile } from \"@/App\";\nimport { Component, Prop, Vue } from \"vue-property-decorator\";\nimport TileComponent from \"./TileComponent\";\n\n@Component({\n  components: {\n    card: TileComponent,\n  },\n})\nexport default class GridComponent extends Vue {\n  @Prop({ required: true })\n  data!: (Tile | null)[][];\n\n  onTileClick(tile: Tile | null, row: (Tile | null)[], x: number, y: number) {\n    this.$emit(\"tileClick\", tile, row, x, y);\n  }\n\n  onTypeClick(tile: Tile) {\n    this.$emit(\"typeClick\", tile);\n  }\n\n  render() {\n    return (\n      <div class=\"grid\">\n        {this.data.map((row, x) => {\n          return (\n            <div key={x} class=\"row flex\">\n              {row.map((tile, y) => {\n                return (\n                  <card\n                    key={`${x}-${y}-${tile?.id}`}\n                    data={tile}\n                    onTypeClick={this.onTypeClick}\n                    onTileClick={() => this.onTileClick(tile, row, x, y)}\n                  />\n                );\n              })}\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n","import { Component, Vue } from \"vue-property-decorator\";\nimport GridComponent from \"./components/GridComponent\";\nimport {\n  mdiLayers,\n  mdiShield,\n  mdiShieldHalfFull,\n  mdiShieldSearch,\n  mdiStarShooting,\n} from \"@mdi/js\";\n// ts-expect-error no defs\n// import seedrandom from \"seedrandom\";\n\nexport enum ItemType {\n  Shield = \"shield\",\n  Detect = \"detect\",\n  DecayDown = \"decayDown\",\n}\n\nexport interface Item {\n  type: ItemType;\n}\n\nexport enum TileType {\n  Energy = \"energy\",\n  Decay = \"decay\",\n  Entropy = \"entropy\",\n}\n\nexport interface GameState {\n  path: string[];\n  tiles: Tile[];\n  score: number;\n  grids: Grid[];\n  hasShield: boolean;\n  hasDetect: boolean;\n  hasDecayDown: boolean;\n}\n\nexport interface Grid {\n  id: string;\n  data: (Tile | null)[][];\n  seed?: string;\n  isPopulated: boolean;\n}\n\nexport interface Tile {\n  id: number;\n  type: TileType;\n  item?: ItemType;\n  dangerNearby: boolean;\n  isRevealed: boolean;\n  isVisited: boolean;\n  gridId?: string;\n  tiles?: Tile[];\n}\n\nlet id = 0;\n\n@Component({\n  components: {\n    grid: GridComponent,\n  },\n})\nexport default class App extends Vue {\n  gameState: GameState = {\n    tiles: [],\n    score: 0,\n    grids: [\n      {\n        id: \"base\",\n        data: [\n          [null, null, null],\n          [null, null, null],\n          [null, null, null],\n        ],\n        isPopulated: false,\n      },\n    ],\n    path: [\"base\"],\n    hasDecayDown: false,\n    hasDetect: false,\n    hasShield: false,\n  };\n\n  blockInput = true;\n\n  onTypeClick(tile: Tile) {\n    if (tile.type === TileType.Entropy && tile.id) {\n      this.blockInput = true;\n      tile.isVisited = true;\n      this.gotoGrid(`tile-${tile.id}`);\n      this.blockInput = false;\n    }\n  }\n\n  async onTileClick(\n    tile: Tile | null,\n    row: (Tile | null)[],\n    x: number,\n    y: number\n  ) {\n    if (!this.blockInput) {\n      this.blockInput = true;\n      if (tile) {\n        tile.isRevealed = true;\n        this.checkTile(x, y, tile);\n        if (tile.type === TileType.Decay) {\n          if (this.gameState.hasShield) {\n            // shield blocks a decay\n            this.gameState.hasShield = false;\n            this.blockInput = false;\n          } else {\n            this.gameState.score -= 1;\n            if (this.gameState.score < 0) this.gameState.score = 0;\n            this.revealAll();\n            window.setTimeout(() => {\n              this.gotoPreviousGrid();\n              this.blockInput = false;\n            }, 2000);\n          }\n        } else {\n          if (tile.item) {\n            if (tile.item === ItemType.Shield) {\n              this.gameState.hasShield = true;\n              await window.setTimeout(() => null, 1000);\n            } else if (tile.item === ItemType.Detect) {\n              this.gameState.hasDetect = true;\n              await window.setTimeout(() => null, 1000);\n            }\n          }\n          const revealedCount = this.getGridTileCountByQuery(\n            this.currentGrid,\n            (a) => {\n              if (a) {\n                return a.isRevealed && a.type !== TileType.Decay\n              } else {\n                return false;\n              }\n            }\n          );\n          if (revealedCount === 6) {\n            this.gameState.score += 1;\n            this.revealAll();\n            window.setTimeout(() => {\n              this.gotoPreviousGrid();\n              this.blockInput = false;\n            }, 2000);\n          }\n          this.blockInput = false;\n        }\n      } else {\n        this.blockInput = false;\n      }\n    }\n  }\n\n  get currentGrid() {\n    const grid = this.gameState.grids.find((a) => a.id === this.currentGridId);\n    return grid;\n  }\n\n  get currentGridId() {\n    return this.gameState.path[this.gameState.path.length - 1];\n  }\n\n  resetGridPath() {\n    this.gameState.path.splice(1, this.gameState.path.length);\n    this.$nextTick(() => {\n      this.reset();\n    });\n  }\n\n  gotoPreviousGrid() {\n    if (this.gameState.path.length > 1) {\n      this.gameState.path.pop();\n      this.$nextTick(() => {\n        // reveal a decay if we have detect at start\n        if (this.gameState.hasDetect) {\n          this.gameState.hasDetect = false;\n          const decayTiles = this.getGridTilesByQuery(this.currentGrid, a => a?.type === TileType.Decay);\n          if (decayTiles.length > 0) {\n            const index = Math.floor(Math.random() * decayTiles.length);\n            const decayTile = decayTiles[index];\n            decayTile.isRevealed = true;\n          }\n        }\n      });\n    } else {\n      this.reset();\n    }\n  }\n\n  gotoGrid(id: string) {\n    this.gameState.path.push(id);\n    const existingGrid = this.gameState.grids.find(a => a.id === id);\n    if (!existingGrid) {\n      this.gameState.grids.push({\n        id,\n        data: [\n          [null, null, null],\n          [null, null, null],\n          [null, null, null],\n        ],\n        isPopulated: false,\n      })\n      this.$nextTick(() => {\n        this.reset();\n      });\n    } else {\n      // reveal a decay if we have detect at start\n      if (this.gameState.hasDetect) {\n        this.gameState.hasDetect = false;\n        const decayTiles = this.getGridTilesByQuery(this.currentGrid, a => a?.type === TileType.Decay);\n        if (decayTiles.length > 0) {\n          const index = Math.floor(Math.random() * decayTiles.length);\n          const decayTile = decayTiles[index];\n          decayTile.isRevealed = true;\n        }\n      }\n    }\n  }\n\n  created() {\n    this.reset();\n  }\n\n  revealAll() {\n    for (let x = 0; x < 3; x++) {\n      for (let y = 0; y < 3; y++) {\n        const tile = this.currentGrid?.data[x][y];\n        if (tile) {\n          tile.isRevealed = true;\n        }\n      }\n    }\n  }\n\n  reset() {\n    this.resetGrid();\n    this.createDeck();\n    this.shuffleDeck();\n    this.populateGrid();\n\n    if (this.currentGrid) this.currentGrid.isPopulated = true;\n\n    this.blockInput = false;\n  }\n\n  getGridTileCountByQuery(\n    grid: Grid | undefined,\n    query: (tile: Tile | undefined | null) => boolean\n  ) {\n    const tiles = this.getGridTilesByQuery(grid, query);\n    return tiles.length;\n  }\n\n  getGridTilesByQuery(\n    grid: Grid | undefined,\n    query: (tile: Tile | undefined | null) => boolean\n  ): Tile[] {\n    const items = grid?.data.flat();\n    if (items) {\n      const byType = items.filter(query);\n      if (byType && byType.length > 0) {\n        return byType as Tile[];\n      }\n    }\n    return [];\n  }\n\n  populateGrid() {\n    this.$nextTick(() => {\n      // fill grid\n      if (this.currentGrid) {\n        for (let x = 0; x < 3; x++) {\n          for (let y = 0; y < 3; y++) {\n            const tile = this.gameState.tiles.pop();\n            if (tile) {\n              this.$set(this.currentGrid.data[x], y, tile);\n            }\n          }\n        }\n        for (let x = 0; x < 3; x++) {\n          for (let y = 0; y < 3; y++) {\n            const tile = this.currentGrid.data[x][y];\n            if (tile) {\n              this.checkTile(x, y, tile);\n            }\n          }\n        }\n        // show random energy tile\n        const energyTiles = this.getGridTilesByQuery(this.currentGrid, a => a?.type === TileType.Energy);\n        const blueEnergyTiles = energyTiles.filter(a => !a.dangerNearby);\n        if (energyTiles.length > 0) {\n          const index = Math.floor(Math.random() * blueEnergyTiles.length);\n          const energyTile = blueEnergyTiles[index];\n          if (energyTile) {\n            energyTile.isRevealed = true;\n          }\n        }\n        if (energyTiles.length > 0) {\n          // add item to random tile\n          const index = Math.floor(Math.random() * energyTiles.length);\n          const energyTile = energyTiles[index];\n          if (energyTile && Math.random() < 0.6) {\n            const chance = Math.random() < 0.5;\n            if (chance) {\n              energyTile.item = ItemType.Shield;\n            } else {\n              energyTile.item = ItemType.Detect;\n            }\n          }\n        }\n        // reveal a decay if we have detect at start\n        if (this.gameState.hasDetect) {\n          this.gameState.hasDetect = false;\n          const decayTiles = this.getGridTilesByQuery(this.currentGrid, a => a?.type === TileType.Decay);\n          if (decayTiles.length > 0) {\n            const index = Math.floor(Math.random() * decayTiles.length);\n            const decayTile = decayTiles[index];\n            decayTile.isRevealed = true;\n          }\n        }\n      }\n    });\n  }\n\n  checkTile(x: number, y: number, tile: Tile) {\n    if (tile.type === TileType.Energy) {\n      if (\n        (this.currentGrid?.data[x - 1] &&\n          this.currentGrid?.data[x - 1][y]?.type === TileType.Decay) ||\n        (this.currentGrid?.data[x + 1] &&\n          this.currentGrid?.data[x + 1][y]?.type === TileType.Decay) ||\n        (this.currentGrid?.data[x] &&\n          this.currentGrid?.data[x][y - 1]?.type === TileType.Decay) ||\n        (this.currentGrid?.data[x] &&\n          this.currentGrid?.data[x][y + 1]?.type === TileType.Decay)\n      ) {\n        this.$set(tile, \"dangerNearby\", true);\n      }\n    }\n  }\n\n  shuffleDeck() {\n    for (let index = 0; index < 150; index++) {\n      let previousTile = null;\n      if (Math.random() < 0.5) {\n        previousTile = this.gameState.tiles.pop();\n        if (previousTile) {\n          this.gameState.tiles.unshift(previousTile);\n        }\n      } else {\n        previousTile = this.gameState.tiles.shift();\n        if (previousTile) {\n          this.gameState.tiles.push(previousTile);\n        }\n      }\n    }\n    // alway make first an energy tile\n    for (let index = 0; index < this.gameState.tiles.length; index++) {\n      if (this.gameState.tiles[index].type === TileType.Energy) {\n        const tile = this.gameState.tiles[index];\n        this.gameState.tiles.splice(index, 1);\n        this.gameState.tiles.push(tile);\n        break;\n      }\n    }\n  }\n\n  resetGrid() {\n    if (this.currentGrid) {\n      this.currentGrid.data = [\n        [null, null, null],\n        [null, null, null],\n        [null, null, null],\n      ];\n    }\n  }\n  \n  nextId() {\n    id++;\n    return id;\n  }\n\n  createDeck() {\n    this.gameState.tiles = [];\n    for (let index = 0; index < 5; index++) {\n      this.gameState.tiles.push({\n        id: this.nextId(),\n        type: TileType.Energy,\n        dangerNearby: false,\n        isRevealed: false,\n        isVisited: false,\n      });\n    }\n    this.gameState.tiles.push({\n      id: this.nextId(),\n      type: TileType.Decay,\n      isRevealed: false,\n      dangerNearby: false,\n      isVisited: false,\n    });\n    this.gameState.tiles.push({\n      id: this.nextId(),\n      type: TileType.Decay,\n      isRevealed: false,\n      dangerNearby: false,\n      isVisited: false,\n    });\n    this.gameState.tiles.push({\n      id: this.nextId(),\n      type: TileType.Decay,\n      isRevealed: false,\n      dangerNearby: false,\n      isVisited: false,\n    });\n    this.gameState.tiles.push({\n      id: this.nextId(),\n      type: TileType.Entropy,\n      dangerNearby: false,\n      isRevealed: false,\n      isVisited: false,\n    });\n  }\n\n  render() {\n    return (\n      <div class=\"app w-screen h-screen flex justify-center content-center\">\n        <div\n          class=\"flex justify-center items-center\"\n          style=\"flex-direction: column;\"\n        >\n          <div class=\"flex mb-2 items-center\">\n            <svg\n              class=\"mr-2 text-amber-300\"\n              style=\"width:56px;height:56px\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path fill=\"currentColor\" d={mdiStarShooting} />\n            </svg>\n            <span class=\"text-3xl font-bold text-warm-gray-700\">\n              {this.gameState.score}\n            </span>\n          </div>\n          {/*<div class=\"flex mb-8 items-center\">\n            <svg\n              class=\"mr-2 text-lime-500\"\n              style=\"width:24px;height:24px\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path fill=\"currentColor\" d={mdiSprout} />\n            </svg>\n            <span class=\"font-bold text-warm-gray-700\">{this.gameState.seed}</span>\n          </div>*/}\n          <div class=\"flex mb-8 items-center\">\n            <svg\n              class=\"mr-2 text-lime-500\"\n              style=\"width:24px;height:24px\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path fill=\"currentColor\" d={mdiLayers} />\n            </svg>\n            <span class=\"font-bold text-warm-gray-700\">{this.gameState.path.length - 1}</span>\n          </div>\n          <grid data={this.currentGrid?.data} onTileClick={this.onTileClick} onTypeClick={this.onTypeClick} />\n          <div class=\"flex mt-8 items-center\">\n            <div>\n              <svg\n                class={{ \"text-warm-gray-600\": this.gameState.hasShield, \"text-warm-gray-200\": !this.gameState.hasShield }}\n                staticClass=\"mr-2\"\n                style=\"width:48px;height:48px\"\n                viewBox=\"0 0 24 24\"\n              >\n                <path fill=\"currentColor\" d={mdiShield} />\n              </svg>\n            </div>\n            <div>\n              <svg\n                class={{ \"text-warm-gray-600\": this.gameState.hasDetect, \"text-warm-gray-200\": !this.gameState.hasDetect }}\n                staticClass=\"mr-2\"\n                style=\"width:48px;height:48px\"\n                viewBox=\"0 0 24 24\"\n              >\n                <path fill=\"currentColor\" d={mdiShieldSearch} />\n              </svg>\n            </div>\n            {/*<div>\n              <svg\n                class=\"mr-2 text-warm-gray-200\"\n                style=\"width:48px;height:48px\"\n                viewBox=\"0 0 24 24\"\n              >\n                <path fill=\"currentColor\" d={mdiShieldHalfFull} />\n              </svg>\n            </div>*/}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","/* eslint-disable no-console */\n\nimport { register } from \"register-service-worker\";\n\nif (process.env.NODE_ENV === \"production\") {\n  register(`${process.env.BASE_URL}service-worker.js`, {\n    ready() {\n      console.log(\n        \"App is being served from cache by a service worker.\\n\" +\n          \"For more details, visit https://goo.gl/AFskqB\"\n      );\n    },\n    registered() {\n      console.log(\"Service worker has been registered.\");\n    },\n    cached() {\n      console.log(\"Content has been cached for offline use.\");\n    },\n    updatefound() {\n      console.log(\"New content is downloading.\");\n    },\n    updated() {\n      console.log(\"New content is available; please refresh.\");\n    },\n    offline() {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    },\n    error(error) {\n      console.error(\"Error during service worker registration:\", error);\n    },\n  });\n}\n","import Vue from \"vue\";\nimport App from \"./App\";\nimport \"./registerServiceWorker\";\n\nimport \"windi.css\";\n\nVue.config.productionTip = false;\n\nnew Vue({\n  render: (h) => h(App),\n}).$mount(\"#app\");\n"],"sourceRoot":""}